[{"path":"/articles/triangledistributionmath.html","id":"triangle-notation","dir":"Articles","previous_headings":"","what":"Triangle Notation","title":"Triangle Distribution Math","text":"\\(\\) = minimum \\(b\\) = maximum \\(c\\) = mode \\(h\\) = density mode = \\(\\frac{2}{b-}\\)","code":""},{"path":"/articles/triangledistributionmath.html","id":"triangle-pdf","dir":"Articles","previous_headings":"","what":"Triangle PDF","title":"Triangle Distribution Math","text":"\\[f(x) = \\left\\{     \\begin{array}{ll}         \\frac{h}{c-}(x-)  & \\mbox{} \\leq x \\leq c \\\\         \\frac{h}{c-b}(x-b) & \\mbox{} c < x \\leq b \\\\         0 & \\mbox{otherwise}     \\end{array} \\right.\\ \\ \\ \\ (1)\\] Integrating pdf equation (1) solve h \\[\\int f(x) dx = 1\\] \\[\\frac{h}{c-}\\int_{}^{c} (x-) dx + \\frac{h}{c-b} \\int_{c}^{b} (x-b) dx = \\frac{h(b-)}{2}\\] \\[h=\\frac{2}{b-}\\ \\ \\ \\ (2)\\] Substituting back equation (1), \\[f(x) = \\left\\{     \\begin{array}{ll}         \\frac{2}{(b-)(c-)}(x-)  & \\mbox{} \\leq x \\leq c \\\\         \\frac{2}{(b-)(c-b)}(x-b) & \\mbox{} c < x \\leq b \\\\         0 & \\mbox{otherwise}     \\end{array} \\right.\\ \\ \\ \\ (3)\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"triangle-mean","dir":"Articles","previous_headings":"","what":"Triangle Mean","title":"Triangle Distribution Math","text":"Integrating equation (3) find \\(E(x)\\), \\[E(X)=\\int xf(x)dx = \\frac{h}{c-}\\int_a^c (x^2-ax) dx + \\frac{h}{c-b}\\int_c^b (x^2-bx) dx\\] \\[=\\frac{+b+c}{3}\\ \\ \\ \\ (4)\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"triangle-variance","dir":"Articles","previous_headings":"","what":"Triangle Variance","title":"Triangle Distribution Math","text":"\\[V(X) = E(X^2) - \\big(E(X)\\big)^2 = \\int x^2f(x)dx- \\bigg(\\frac{+b+c}{3}\\bigg)^2\\] \\[=\\frac{h}{c-}\\int_{}^{c} x^2(x-) dx + \\frac{h}{c-b} \\int_{c}^{b} x^2(x-b) dx- \\bigg(\\frac{+b+c}{3}\\bigg)^2\\] \\[=\\frac{^2+b^2+c^2-ab-ac-bc}{18}\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"logarithmic-triangle-distribution","dir":"Articles","previous_headings":"","what":"Logarithmic Triangle distribution","title":"Triangle Distribution Math","text":"Define: \\[a_l=\\log_{\\phi}(),\\ \\ b_l=\\log_{\\phi}(b),\\ \\ c_l=\\log_{\\phi}(c),\\ \\ h=\\frac{2}{b_l-a_l}, \\ \\ \\phi = \\mbox{log base}\\] \\[f(z) = \\left\\{   \\begin{array}{ll}     \\frac{h}{c_l - a_l}(z - a_l) & \\mbox{} a_l \\leq z \\leq c_l \\\\     \\frac{h}{c_l - b_l}(z - b_l) & \\mbox{} c_l < z \\leq b_l \\\\     0 & \\mbox{otherwise}   \\end{array} \\right.\\ \\ \\ \\ (5)\\] However, \\[E({\\phi}^z) \\neq {\\phi}^{E(z)}\\ \\ \\ \\ (6)\\] Therefore, transforming… \\[Y={\\phi}^Z\\] \\[Z=\\log_{\\phi}(Y)\\] \\[w(y)=\\log_{\\phi}(y)\\] \\[w'(y)=\\frac{dz}{dy} = \\frac{1}{y\\log({\\phi})}\\] \\[g(y)=f(w(y))w'(y)\\] \\[g(y) = \\left\\{   \\begin{array}{ll}     \\frac{2}{(c_l-a_l)(b_l-a_l)\\log({\\phi})}\\frac{log_{\\phi}(y) - a_l}{y} & \\mbox{} 0 < \\leq y \\leq c \\\\     \\frac{2}{(c_l-b_l)(b_l-a_l)\\log({\\phi})}\\frac{log_{\\phi}(y) - b_l}{y} & \\mbox{} c < y \\leq b \\\\     0 & \\mbox{otherwise}   \\end{array} \\right.\\ \\ \\ \\ (7)\\] Define: \\[\\beta_1=\\frac{2}{(c_l-a_l)(b_l-a_l)}\\] \\[\\beta_2=\\frac{2}{(c_l-b_l)(b_l-a_l)}\\] Finding CDF, \\[G(y)=\\int_{-\\infty}^y g(y)dy\\] \\[\\mbox{}\\ \\leq y \\leq c,\\ \\ G(y) = \\frac{\\beta_1}{\\log({\\phi})} \\int_a^y \\frac{\\log(y)}{y\\log({\\phi})}-\\frac{a_l}{y}dy\\] \\[=\\beta_1 \\bigg[\\frac{\\log_{\\phi}^2(y)}{2} - a_l \\log_{\\phi}(y) - \\frac{a_l^2}{2} + a_l^2\\bigg]\\] \\[\\mbox{}\\ c < y \\leq b,\\ \\ G(y) = G(c) + \\frac{\\beta_2}{\\log({\\phi})} \\int_c^y \\frac{\\log(y)}{y\\log({\\phi})} - \\frac{b_l}{y}dy\\] \\[=G(c) + \\beta_2 \\bigg[\\frac{\\log_{\\phi}^2(y)}{2} - b_l \\log_{\\phi}(y) - \\frac{c_l^2}{2} + b_l c_l\\bigg]\\] Checking CDF 1 b, \\[G(b) = \\frac{c_l^2 - 2a_l c_l + a_l^2}{(c_l-a_l)(b_l-a_l)} + \\frac{-b_l^2-c_l^2+2b_lc_l}{(c_l-b_l)(b_l-a_l)}\\] \\[= \\frac{c_l-a_l}{b_l-a_l} + \\frac{-(c_l-b_l)}{b_l-a_l} = 1\\] Now calculating \\(E(y)\\), \\[E(y) = \\int y\\ g(y)\\ dy\\] \\[=\\frac{\\beta_1}{\\log({\\phi})} \\int_a^c \\bigg[\\frac{\\log(y)}{\\log({\\phi})} - a_l\\bigg]dy + \\frac{\\beta_2}{\\log({\\phi})} \\int_c^b \\bigg[\\frac{\\log(y)}{\\log({\\phi})} - b_l\\bigg]dy\\] \\[=\\frac{c\\beta_1}{\\log^2({\\phi})} \\bigg[\\log(c) - 1 - \\log() + \\frac{}{c} \\bigg] + \\frac{c\\beta_2}{\\log^2({\\phi})} \\bigg[\\frac{-b}{c} - \\log(c) + 1 + \\log(b) \\bigg]\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"method-of-moments-estimation","dir":"Articles","previous_headings":"","what":"Method of Moments Estimation","title":"Triangle Distribution Math","text":"\\[E(x) = \\frac{+ b + c}{3}\\] \\[c = 3E(x) - - b\\] \\[\\hat{} = min(x)\\] \\[\\hat{b} = max(x)\\] \\[\\hat{c} = 3\\bar{x} - \\min(x) - \\max(x)\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Maximum Likelihood Estimation","title":"Triangle Distribution Math","text":"procedure maximum likelihood estimation involves maximizing likelihood respect \\(c\\) fixed \\(\\) \\(b\\), followed minimizing negative log likelihood respect \\(\\) \\(b\\) fixed \\(c\\).","code":""},{"path":"/articles/triangledistributionmath.html","id":"maximizing-the-likelihood-with-respect-to-c","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"Maximizing the Likelihood with respect to \\(c\\)","title":"Triangle Distribution Math","text":"discussion follows results Samuel Kotz Johan Rene van Dorp. Beyond Beta purposes section, fixed \\(\\) \\(b\\), sample can easily rescaled \\(=0\\) \\(b=1\\). section proceed \\([0,1]\\) mode \\(0 \\le c \\le 1\\) \\[w(x) = \\left\\{   \\begin{array}{ll}     \\frac{2x}{c} & \\mbox{} 0 \\le x \\lt c \\\\     \\frac{2(1-x)}{1-c} & \\mbox{} c \\le x \\leq 1 \\\\     0 & \\mbox{otherwise}   \\end{array} \\right.\\] \\[L(x|c) = \\prod_{}^{n} w(x|c)\\] Assume sample ordered order statistics \\(X_{(1)} \\lt \\dots \\lt X_{(n)}\\). Also, note \\(X_{(r)} \\le c \\lt X_{(r+1)}\\). words, mode falls \\(r^{th}\\) \\(r+1\\) order statistics. \\[L(x|c) = \\prod_{=1}^{r} \\frac{2x_{()}}{c} \\prod_{=r+1}^{n} \\frac{2(1-x_{()})}{1-c} = \\frac{2^n \\prod_{=1}^{r} x_{()} \\prod_{=r+1}^{n} (1-x_{()})}{c^r(1-c)^{n-r}}\\] maximize likelihood, can first maximize respect \\(r\\) locate \\(c\\) \\(r^{th}\\) \\(r+1\\) order statistics. notation purposes, also define \\(X_{(0)} = 0\\) \\(X_{(n+1)} = 1\\). \\[\\large \\max_{0 \\le c \\le 1} L(x|c) = \\max_{r \\ \\epsilon \\ (0,\\dots,n)} \\ \\ \\max_{x_{(r)} \\le c \\le x_{(r+1)}} \\ \\ L(x|c)\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-1--c-is-between-the-first-and-second-to-last-order-statistic-r-epsilon-1-dots-n-1","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Maximizing the Likelihood with respect to \\(c\\)","what":"Case 1. \\(c\\) is between the first and second to last order statistic \\(r \\ \\epsilon \\ (1, \\dots, n-1)\\)","title":"Triangle Distribution Math","text":"Noticing maximizing likelihood equivalent minimizing denominator: \\[\\large \\max L(x|c) = \\max_{r \\ \\epsilon \\ (1,\\dots,n-1)} \\ \\ \\min_{x_{(r)} \\le c \\le x_{(r+1)}} \\ \\ c^r(1-c)^{n-r}\\] Since \\(c^r(1-c)^{n-r}\\) unimodal respect \\(c\\), sufficient test end points interval find minimum interval \\[\\large = \\max_{r \\ \\epsilon \\ (1,\\dots,n-1)} \\ \\ \\min_{c \\ \\epsilon \\ (x_{(r)},\\ \\ x_{(r+1)})} \\ \\ c^r(1-c)^{n-r}\\] Therefore, case, sufficient test likelihood using \\(c\\) sampled points find largest.","code":""},{"path":"/articles/triangledistributionmath.html","id":"side-note-on-zcr1-cn-r-being-unimodal","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Maximizing the Likelihood with respect to \\(c\\) > Case 1. \\(c\\) is between the first and second to last order statistic \\(r \\ \\epsilon \\ (1, \\dots, n-1)\\)","what":"Side note on \\(z=c^r(1-c)^{n-r}\\) being unimodal","title":"Triangle Distribution Math","text":"\\[\\frac{dz}{dc} = rc^{(r-1)}(1-c)^{n-r} + c^r(n-r)(1-c)^{n-r-1}(-1) = c^{(r-1)}(1-c)^{n-r-1}(r - cn)\\] \\(\\frac{dz}{dc} = 0\\) \\(c=0,\\ 1,\\ \\frac{r}{n}\\). \\(0 < c < \\frac{r}{n}\\), \\(z\\) positive, \\(\\frac{r}{n} < c < 1\\), \\(z\\) negative. Therefore, \\(z\\) unimodal \\((0,1)\\).","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-2--c-is-between-0-and-the-first-order-statistic-r-0","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Maximizing the Likelihood with respect to \\(c\\)","what":"Case 2. \\(c\\) is between 0 and the first order statistic \\(r = 0\\)","title":"Triangle Distribution Math","text":"\\[\\large \\max L(x|c) = \\max_{0 \\le c \\le x_{(1)}} \\prod_{=1}^{n} \\frac{1-x_{()}}{1-c} = \\prod_{=1}^{n} \\frac{1-x_{()}}{1-x_{(1)}}\\] Choosing largest endpoint interval, creates smallest denominator, largest likelihood. Therefore, case, sufficient test likelihood using \\(c\\) first sampled point.","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-3--c-is-between-the-last-order-statistic-r-n-and-1","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Maximizing the Likelihood with respect to \\(c\\)","what":"Case 3. \\(c\\) is between the last order statistic \\(r = n\\) and 1","title":"Triangle Distribution Math","text":"\\[\\large \\max L(x|c) = \\max_{x_{(n)} \\le c \\le 1} \\prod_{=1}^{n} \\frac{x_{()}}{c} = \\prod_{=1}^{n} \\frac{x_{()}}{x_{(n)}}\\] Choosing smallest option denominator creates largest likelihood. , sufficient test likelihood using \\(c\\) largest sample point.","code":""},{"path":"/articles/triangledistributionmath.html","id":"all-cases","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Maximizing the Likelihood with respect to \\(c\\)","what":"All Cases","title":"Triangle Distribution Math","text":"cases, sufficient compute sample likelihood using \\(c\\) equal samples, choosing largest likelihood \\(n\\) options find corresponding \\(c\\). calculation performed fixed \\(\\) \\(b\\), test must performed iteratively \\(\\) \\(b\\) separately optimized.","code":""},{"path":"/articles/triangledistributionmath.html","id":"negative-log-likelihood","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"Negative Log Likelihood","title":"Triangle Distribution Math","text":"\\[nLL = -\\log(L) = -\\log\\left(\\prod_i^n f(x_i)\\right)\\] \\[ = - \\sum_i^n \\log\\left(f(x_i)\\right) = - \\sum_{: \\ \\le x_i \\lt c}^{n_1} \\log\\left(f(x_i)\\right) - \\sum_{: \\ c \\le x_i \\le b}^{n_2} \\log\\left(f(x_i)\\right)\\] \\(n = n_1 + n_2\\)","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-1-a-c-lt-b","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Negative Log Likelihood","what":"Case 1 \\(a = c \\lt b\\)","title":"Triangle Distribution Math","text":"\\[ nLL = - \\sum_{}^{n} \\log(2) + \\log(b-x_i) - \\log(b-) - \\log(b-c)\\] \\[ = -n\\log(2) + n\\log(b-) + n \\log(b-c) - \\sum_{}^{n} \\log(b-x_i)\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-2-a-lt-c-b","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Negative Log Likelihood","what":"Case 2 \\(a \\lt c = b\\)","title":"Triangle Distribution Math","text":"\\[ nLL = - \\sum_{}^{n} \\log(2) + \\log(x_i - ) - \\log(b-) - \\log(c-) \\] \\[ = -n\\log(2) + n\\log(b-) + n\\log(c-) - \\sum_{}^{n} \\log(x_i - )\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-3-a-c-b","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Negative Log Likelihood","what":"Case 3 a c b","title":"Triangle Distribution Math","text":"\\[ nLL = - \\sum_{: \\ \\lt x_i \\lt c}^{n_1} \\log(2) + \\log(x_i - ) - \\log(b-) - \\log(c-) - \\sum_{: \\ c \\le x_i \\lt b}^{n_2} \\log(2) + \\log(b-x_i) - \\log(b-) - \\log(b-c)\\] \\[ = -n\\log(2) + n\\log(b-) + n_1\\log(c-) + n_2 \\log(b-c) - \\sum_{: \\ \\lt x_i \\lt c}^{n_1} \\log(x_i - ) - \\sum_{: \\ c \\le x_i \\lt b}^{n_2} \\log(b-x_i)\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"gradient-of-the-negative-log-likelihood-given-c","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"Gradient of the negative Log Likelihood Given \\(c\\):","title":"Triangle Distribution Math","text":"negative log likelihood differentiable respect \\(c\\) limits sum (\\(n_1\\) \\(n_2\\)) functions \\(c\\). Therefore gradient hessian derived \\(c\\) fixed.","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-1-a-c-lt-b-1","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Gradient of the negative Log Likelihood Given \\(c\\):","what":"Case 1 \\(a = c \\lt b\\)","title":"Triangle Distribution Math","text":"\\[\\frac{\\partial nLL}{\\partial } = - \\frac{n}{b-}\\] \\[\\frac{\\partial nLL}{\\partial b} = \\frac{n}{b-} + \\frac{n}{b-c} - \\sum_i^{n} \\frac{1}{b-x_i}\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-2-a-lt-c-b-1","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Gradient of the negative Log Likelihood Given \\(c\\):","what":"Case 2 \\(a \\lt c = b\\)","title":"Triangle Distribution Math","text":"\\[\\frac{\\partial nLL}{\\partial } = - \\frac{n}{b-} - \\frac{n}{c-} + \\sum_i^{n} \\frac{1}{x_i - }\\] \\[\\frac{\\partial nLL}{\\partial b} = \\frac{n}{b-}\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-3-a-lt-c-lt-b","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Gradient of the negative Log Likelihood Given \\(c\\):","what":"Case 3 \\(a \\lt c \\lt b\\)","title":"Triangle Distribution Math","text":"\\[\\frac{\\partial nLL}{\\partial } = - \\frac{n}{b-} - \\frac{n_1}{c-} + \\sum_i^{n_1} \\frac{1}{x_i - }\\] \\[\\frac{\\partial nLL}{\\partial b} = \\frac{n}{b-} + \\frac{n_2}{b-c} - \\sum_i^{n_2} \\frac{1}{b-x_i}\\]","code":""},{"path":[]},{"path":"/articles/triangledistributionmath.html","id":"case-1-a-c-lt-b-2","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Hessian of the negative Log Likelihood Given \\(c\\):","what":"Case 1 \\(a = c \\lt b\\)","title":"Triangle Distribution Math","text":"\\[\\frac{\\partial^2nLL}{\\partial ^2} = - \\frac{n}{(b-)^2}\\] \\[\\frac{\\partial^2 nLL}{\\partial b^2} = -\\frac{n}{(b-)^2} - \\frac{n}{(b-c)^2} + \\sum_i^{n} \\frac{1}{(b-x_i)^2}\\] \\[\\frac{\\partial^2 nLL}{\\partial \\partial b} = \\frac{\\partial^2 nLL}{\\partial b\\partial } = - \\frac{n}{(b-)^2}\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-2-a-lt-c-b-2","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Hessian of the negative Log Likelihood Given \\(c\\):","what":"Case 2 \\(a \\lt c = b\\)","title":"Triangle Distribution Math","text":"\\[\\frac{\\partial^2 nLL}{\\partial ^2} = - \\frac{n}{(b-)^2} - \\frac{n}{(c-)^2} + \\sum_i^{n} \\frac{1}{(x_i - )^2}\\] \\[\\frac{\\partial^2 nLL}{\\partial b^2} = - \\frac{n}{(b-)^2}\\] \\[\\frac{\\partial^2 nLL}{\\partial \\partial b} = \\frac{\\partial^2 nLL}{\\partial b\\partial } = - \\frac{n}{(b-)^2}\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"case-3-a-lt-c-lt-b-1","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > Hessian of the negative Log Likelihood Given \\(c\\):","what":"Case 3 \\(a \\lt c \\lt b\\)","title":"Triangle Distribution Math","text":"\\[\\frac{\\partial^2 nLL}{\\partial ^2} = - \\frac{n}{(b-)^2} - \\frac{n_1}{(c-)^2} + \\sum_i^{n_1} \\frac{1}{(x_i - )^2}\\] \\[\\frac{\\partial ^2 nLL}{\\partial b^2} = -\\frac{n}{(b-)^2} - \\frac{n_2}{(b-c)^2} + \\sum_i^{n_2} \\frac{1}{(b-x_i)^2}\\] \\[\\frac{\\partial ^2 nLL}{\\partial \\partial b} = \\frac{\\partial ^2 nLL}{\\partial b\\partial } = - \\frac{n}{(b-)^2}\\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"mle-variance-co-variance","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"MLE Variance Co-variance","title":"Triangle Distribution Math","text":"optimization \\((,b)\\) given \\(c\\), can use inverse hessian negative log likelihood estimate covariance matrix \\(\\hat{}\\) \\(\\hat{b}\\). variance \\(\\hat{c}\\), use variance \\(r^{th}\\) order statistic corresponds \\(c\\). covariance \\((,b)\\) \\(c\\) computed negative log likelihood differentiable respect \\(c\\). Let \\(H\\) denote Hessian matrix, let \\(H^{-1}[1,1]\\) \\(V(\\hat{})\\), \\(H^{-1}[2,2]\\) \\(V(\\hat{b})\\), \\(H^{-1}[1,2] = H^{-1}[2,1]\\) \\(Cov(\\hat{}, \\hat{b})\\). , \\[ V([\\hat{}, \\hat{b}, \\hat{c}]) =    \\begin{bmatrix}    H^{-1}[1,1] & H^{-1}[1,2] & 0  \\\\    H^{-1}[2,1] & H^{-1}[2,2] & 0  \\\\    0 & 0 & V(\\hat{c})  \\\\ \\end{bmatrix} \\]","code":""},{"path":"/articles/triangledistributionmath.html","id":"rth-order-statistic","dir":"Articles","previous_headings":"Maximum Likelihood Estimation > MLE Variance Co-variance","what":"\\(r^{th}\\) order statistic","title":"Triangle Distribution Math","text":"\\[f(x_{(r)}) = \\frac{n!}{(r-1)!(n-r)!} f(x) [F(x)]^{(r-1)}[1-F(x)]^{(n-r)}\\] closed form solution \\(V(X_{(r)})\\) easily obtainable triangle, numerical integration used \\(f(x)\\) dtriangle \\(F(x)\\) ptriangle. \\[V\\left(X_{(r)}\\right) = \\int_a^b x^2 f(x_{(r)}) dx - \\left[\\int_a^b x f(x_{(r)}) dx \\right]^2\\]","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Carnell. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carnell R (2024). triangle: Distribution Functions Parameter Estimates Triangle Distribution. R package version 1.0.1, https://bertcarnell.github.io/triangle/, https://bertcarnell.github.io/triangle/.","code":"@Manual{,   title = {triangle: Distribution Functions and Parameter Estimates for the Triangle Distribution},   author = {Rob Carnell},   year = {2024},   note = {R package version 1.0.1, https://bertcarnell.github.io/triangle/},   url = {https://bertcarnell.github.io/triangle/}, }"},{"path":"/index.html","id":"triangle","dir":"","previous_headings":"","what":"Distribution Functions and Parameter Estimates for the Triangle Distribution","title":"Distribution Functions and Parameter Estimates for the Triangle Distribution","text":"R package work triangle distribution logarithmic triangle distribution See package documentation :","code":""},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Distribution Functions and Parameter Estimates for the Triangle Distribution","text":"Install R package: use functions: = minimum b = maximum c = mode","code":"# Stable CRAN version install.packages(triangle)  # OR development version from GitHub require(devtools) devtools::install_github(\"bertcarnell/triangle\") require(triangle)"},{"path":"/index.html","id":"triangle-distribution","dir":"","previous_headings":"Getting Started","what":"Triangle distribution","title":"Distribution Functions and Parameter Estimates for the Triangle Distribution","text":"","code":"# rtriangle(n, a, b, c) set.seed(42) rtriangle(5, 1, 5, 2) ## [1] 3.988898 4.131038 2.073171 3.573596 2.926584 # ptriangle(x, a, b, c) ptriangle(0:5, 0, 10, 5) ## [1] 0.00 0.02 0.08 0.18 0.32 0.50 # qtriangle(p, a, b, c) qtriangle(seq(0, 1, by = 0.2), 1, 10, 3) ## [1]  1.000000  2.897367  3.851830  4.980040  6.450352 10.000000 # dtriangle(x, a, b, c) dtriangle(0:4, 0, 10, 5) ## [1] 0.00 0.04 0.08 0.12 0.16"},{"path":"/index.html","id":"logarithmic-triangle-distribution","dir":"","previous_headings":"Getting Started","what":"Logarithmic triangle distribution","title":"Distribution Functions and Parameter Estimates for the Triangle Distribution","text":"","code":"# rltriangle(n, a, b, c, logbase) set.seed(2001) rltriangle(5, 1, 100, 10) ## [1] 20.195183 13.001831  4.579489  4.753026  3.572658 # pltriangle(x, a, b, c, logbase) pltriangle(10^(0:3), 1, 1000, 10) ## [1] 0.0000000 0.3333333 0.8333333 1.0000000 # qltriangle(p, a, b, c, logbase) qltriangle(seq(0, 1, by = 0.2), 1, 100, 20) ## [1]   1.00000   5.26497  10.47630  17.76210  29.59642 100.00000 # dltriangle(x, a, b, c, logbase) dltriangle(0:5, 1, 10, 5) ## [1] 0.0000000 0.0000000 0.8613531 1.3652124 1.7227062 2.0000000"},{"path":[]},{"path":"/index.html","id":"triangle-method-of-moments-estimates","dir":"","previous_headings":"Getting Started > Parameter estimates","what":"triangle method of moments estimates","title":"Distribution Functions and Parameter Estimates for the Triangle Distribution","text":"","code":"x <- rtriangle(20, 0, 2, 1.5) triangle_mom(x) ## [1] 0.6341961 1.9096262 1.4197678"},{"path":"/index.html","id":"triangle-maximum-likelihood-estimates","dir":"","previous_headings":"Getting Started > Parameter estimates","what":"triangle maximum likelihood estimates","title":"Distribution Functions and Parameter Estimates for the Triangle Distribution","text":"","code":"x <- c(0.1, 0.25, 0.3, 0.4, 0.45, 0.6, 0.75, 0.8) # triangle_mle(x, debug = FALSE, maxiter = 100) triangle_mle(x) ## Triangle Maximum Likelihood Estimates ##  ## Call:  triangle_mle(x = x)  ##  ## Estimates: ##    Estimate Std.Err ## a 0.0076277  0.0996 ## b 0.9939370  0.1649 ## c 0.3000000  0.0861 ##  ## Convergence Code:  0 ##   CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH # standard triangle (0,1) likelihood estimates standard_triangle_mle(x) ## Triangle Maximum Likelihood Estimates ##  ## Call:  standard_triangle_mle(x = x)  ##  ## Estimates: ##   Estimate Std.Err ## a      0.0  0.0000 ## b      1.0  0.0000 ## c      0.3  0.0871 ##  ## Convergence Code:  NA ## set.seed(1976) x <- rtriangle(100, 1, 5, 3.5) triangle_mle(x) ## Triangle Maximum Likelihood Estimates ##  ## Call:  triangle_mle(x = x)  ##  ## Estimates: ##   Estimate Std.Err ## a   0.9060  0.1259 ## b   4.8254  0.0770 ## c   3.6853  0.0924 ##  ## Convergence Code:  0 ##   CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"},{"path":"/reference/compare_triangle_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare multiple triangle distributions fits — compare_triangle_fit","title":"Compare multiple triangle distributions fits — compare_triangle_fit","text":"Compare multiple triangle distributions fits","code":""},{"path":"/reference/compare_triangle_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare multiple triangle distributions fits — compare_triangle_fit","text":"","code":"compare_triangle_fit(   y,   cols = c(\"red\", \"blue\", \"green\"),   main = \"Triangle Fit Comparison\",   ... )"},{"path":"/reference/compare_triangle_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare multiple triangle distributions fits — compare_triangle_fit","text":"y triangle distributed sample cols colors CDF-based estimates, maximum likelihood estimates, method moments estimates main plot title ... parameters passed plot.ecdf","code":""},{"path":"/reference/compare_triangle_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare multiple triangle distributions fits — compare_triangle_fit","text":"","code":"set.seed(10304) xtest <- rtriangle(100, 1, 5, 2) compare_triangle_fit(xtest)"},{"path":"/reference/ltriangle.html","id":null,"dir":"Reference","previous_headings":"","what":"The Log-Triangle Distribution — ltriangle","title":"The Log-Triangle Distribution — ltriangle","text":"functions provide information triangle distribution logarithmic interval b maximum c.  dltriangle gives density, pltriangle gives distribution function, qltriangle gives quantile function, rltriangle generates n random deviates.","code":""},{"path":"/reference/ltriangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Log-Triangle Distribution — ltriangle","text":"","code":"rltriangle(   n = 1,   a = 1,   b = 100,   c = 10^((log10(a) + log10(b))/2),   logbase = 10 )  dltriangle(x, a = 1, b = 100, c = 10^((log10(a) + log10(b))/2), logbase = 10)  pltriangle(q, a = 1, b = 100, c = 10^((log10(a) + log10(b))/2), logbase = 10)  qltriangle(p, a = 1, b = 100, c = 10^((log10(a) + log10(b))/2), logbase = 10)"},{"path":"/reference/ltriangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Log-Triangle Distribution — ltriangle","text":"n number observations. length(n) > 1, length taken number required. lower limit distribution. b upper limit distribution. c mode distribution. logbase base logarithmic scale use (default 10) x, q vector quantiles. p vector probabilities.","code":""},{"path":"/reference/ltriangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Log-Triangle Distribution — ltriangle","text":"dltriangle gives density, pltriangle gives distribution function, qltriangle gives quantile function, rltraingle generates random deviates.  Invalid arguments result return value NaN NA.","code":""},{"path":"/reference/ltriangle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Log-Triangle Distribution — ltriangle","text":"probabilities lower tailed probabilties.  , b, c may appropriate length vectors except case rtriangle.","code":""},{"path":"/reference/ltriangle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Log-Triangle Distribution — ltriangle","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988) New S Language.  Wadsworth & Brooks/Cole.","code":""},{"path":[]},{"path":"/reference/ltriangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Log-Triangle Distribution — ltriangle","text":"","code":"tri <- rltriangle(100000, 1, 100, 10) hist(log10(tri), breaks=100, main=\"Triangle Distribution\", xlab=\"x\")  dltriangle(10, 1, 100, 10) # 2/(log10(b)-log10(a)) = 1 #> [1] 1 qltriangle(pltriangle(10)) # 10 #> [1] 10"},{"path":"/reference/mle-utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Methods for S3 class triangle_mle — summary.triangle_mle","title":"Utility Methods for S3 class triangle_mle — summary.triangle_mle","text":"Utility Methods S3 class triangle_mle","code":""},{"path":"/reference/mle-utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Methods for S3 class triangle_mle — summary.triangle_mle","text":"","code":"# S3 method for triangle_mle summary(object, ...)  # S3 method for triangle_mle print(x, ...)  # S3 method for triangle_mle coef(object, ...)  # S3 method for triangle_mle logLik(object, ...)  # S3 method for triangle_mle AIC(object, ..., k = 2)  # S3 method for triangle_mle BIC(object, ...)  # S3 method for triangle_mle vcov(object, ...)  # S3 method for triangle_mle profile(fitted, ...)  # S3 method for triangle_mle confint(object, parm, level = 0.95, ...)"},{"path":"/reference/mle-utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Methods for S3 class triangle_mle — summary.triangle_mle","text":"object class triangle_mle call triangle_mle() ... used except print (arguments passed printCoefmat) x triangle_mle object k penalty per parameter used; default k = 2 fitted object class triangle_mle parm parameters given confidence intervals passed stats4::confint level confidence interval level passed stats4::confint","code":""},{"path":"/reference/mle-utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Methods for S3 class triangle_mle — summary.triangle_mle","text":"object class summary.mle print.triangle_mle: x invisibly coef.triangle_mle: vector coefficients logLik.triangle_mle: object class logLik AIC.triangle_mle: AIC BIC.triangle_mle: BIC vcov.triangle_mle: variance co-variance matrix profile.triangle_mle: object class profile.mle confint.triangle_mle: matrix parameter confidence intervals","code":""},{"path":"/reference/mle-utils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility Methods for S3 class triangle_mle — summary.triangle_mle","text":"","code":"set.seed(1234) x <- rtriangle(100, 0, 1, 0.5) mle1 <- triangle_mle(x) summary(mle1) #> Maximum likelihood estimation #>  #> Call: #> triangle_mle(x = x) #>  #> Coefficients: #>     Estimate Std. Error #> a 0.02332696 0.02638939 #> b 0.96376880 0.02408263 #> c 0.38903301 0.02333771 #>  #> -2 log L: -51.57153  print(mle1) #> Triangle Maximum Likelihood Estimates #>  #> Call:  triangle_mle(x = x)  #>  #> Estimates: #>   Estimate Std.Err #> a 0.023327  0.0264 #> b 0.963769  0.0241 #> c 0.389033  0.0233 #>  #> Convergence Code:  0 #> \t CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH coef(mle1) #>          a          b          c  #> 0.02332696 0.96376880 0.38903301  logLik(mle1) #> 'log Lik.' 25.78577 (df=3) AIC(mle1) #> [1] -45.57153 BIC(mle1) #> [1] -37.75602 vcov(mle1) #>               a             b            c #> a  6.963999e-04 -4.543361e-05 0.0000000000 #> b -4.543361e-05  5.799729e-04 0.0000000000 #> c  0.000000e+00  0.000000e+00 0.0005446485 if (FALSE) {   prof <- profile(mle1)   stats4::plot(prof)   confint(mle1, 1:3, level = 0.95) }"},{"path":"/reference/qqtriangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile-Quantile Plot for Triangle Distributed Data — qqtriangle","title":"Quantile-Quantile Plot for Triangle Distributed Data — qqtriangle","text":"Quantile-Quantile Plot Triangle Distributed Data","code":""},{"path":"/reference/qqtriangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile-Quantile Plot for Triangle Distributed Data — qqtriangle","text":"","code":"qqtriangle(   y,   a,   b,   c,   main = \"Triangle Q-Q Plot\",   xlab = \"Theoretical Quantiles\",   ylab = \"Sample Quantiles\",   ... )"},{"path":"/reference/qqtriangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile-Quantile Plot for Triangle Distributed Data — qqtriangle","text":"y triangle distributed sample theoretical distribution triangle minimum parameter b theoretical distribution triangle maximum parameter c theoretical distribution triangle mode parameter main plot title xlab x-axis label ylab y-axis label ... parameters passed qqplot","code":""},{"path":"/reference/qqtriangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile-Quantile Plot for Triangle Distributed Data — qqtriangle","text":"list x-y coordinates plot","code":""},{"path":"/reference/qqtriangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile-Quantile Plot for Triangle Distributed Data — qqtriangle","text":"","code":"set.seed(10304) xtest <- rtriangle(100, 1, 5, 2) theta <- coef(triangle_mle(xtest)) qqtriangle(xtest, theta[1], theta[2], theta[3])"},{"path":"/reference/standard_triangle_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood estimate of the standard triangle distribution mode — standard_triangle_mle","title":"Maximum likelihood estimate of the standard triangle distribution mode — standard_triangle_mle","text":"Maximum likelihood estimate standard triangle distribution mode","code":""},{"path":"/reference/standard_triangle_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood estimate of the standard triangle distribution mode — standard_triangle_mle","text":"","code":"standard_triangle_mle(x, debug = FALSE)"},{"path":"/reference/standard_triangle_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood estimate of the standard triangle distribution mode — standard_triangle_mle","text":"x sample triangle distribution debug TRUE function check input parameters","code":""},{"path":"/reference/standard_triangle_mle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood estimate of the standard triangle distribution mode — standard_triangle_mle","text":"object S3 class triangle_mle containing list call, coefficients, variance co-variance matrix, minimum negative log likelihood, number observations, sample","code":""},{"path":"/reference/standard_triangle_mle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum likelihood estimate of the standard triangle distribution mode — standard_triangle_mle","text":"Samuel Kotz Johan Rene van Dorp. Beyond Beta doi:10.1142/5720","code":""},{"path":"/reference/standard_triangle_mle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likelihood estimate of the standard triangle distribution mode — standard_triangle_mle","text":"","code":"xtest <- c(0.1, 0.25, 0.3, 0.4, 0.45, 0.6, 0.75, 0.8) standard_triangle_mle(xtest) #> Triangle Maximum Likelihood Estimates #>  #> Call:  standard_triangle_mle(x = xtest)  #>  #> Estimates: #>   Estimate Std.Err #> a      0.0  0.0000 #> b      1.0  0.0000 #> c      0.3  0.0871 #>  #> Convergence Code:  NA #> \t   xtest <- rtriangle(20, 0, 1, 0.63) standard_triangle_mle(xtest) #> Triangle Maximum Likelihood Estimates #>  #> Call:  standard_triangle_mle(x = xtest)  #>  #> Estimates: #>   Estimate Std.Err #> a  0.00000  0.0000 #> b  1.00000  0.0000 #> c  0.67182  0.0556 #>  #> Convergence Code:  NA #>"},{"path":"/reference/triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"The Triangle Distribution — triangle","title":"The Triangle Distribution — triangle","text":"functions provide information triangle distribution interval b maximum c.  dtriangle gives density, ptriangle gives distribution function, qtriangle gives quantile function, rtriangle generates n random deviates.","code":""},{"path":"/reference/triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Triangle Distribution — triangle","text":"","code":"dtriangle(x, a = 0, b = 1, c = (a + b)/2)  ptriangle(q, a = 0, b = 1, c = (a + b)/2)  qtriangle(p, a = 0, b = 1, c = (a + b)/2)  rtriangle(n = 1, a = 0, b = 1, c = (a + b)/2)"},{"path":"/reference/triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Triangle Distribution — triangle","text":"x, q vector quantiles. lower limit distribution. b upper limit distribution. c mode distribution. p vector probabilities. n number observations. length(n) > 1, length taken number required.","code":""},{"path":"/reference/triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Triangle Distribution — triangle","text":"dtriangle gives density, ptriangle gives distribution function, qtriangle gives quantile function, rtriangle generates random deviates.  Invalid arguments result return value NaN NA.","code":""},{"path":"/reference/triangle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Triangle Distribution — triangle","text":"probabilities lower tailed probabilities. , b, c may appropriate length vectors except case rtriangle.  rtriangle derived draw runif. triangle distribution density: $$f(x) = \\frac{2(x-)}{(b-)(c-)}$$ \\(\\le x < c\\). $$f(x) = \\frac{2(b-x)}{(b-)(b-c)}$$ \\(c \\le x \\le b\\). \\(f(x) = 0\\) elsewhere. mean variance : $$E(x) = \\frac{(+ b + c)}{3}$$ $$V(x) = \\frac{1}{18}(^2 + b^2 + c^2 - ab - ac - bc)$$","code":""},{"path":"/reference/triangle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Triangle Distribution — triangle","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988) New S Language.  Wadsworth & Brooks/Cole.","code":""},{"path":[]},{"path":"/reference/triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Triangle Distribution — triangle","text":"","code":"## view the distribution tri <- rtriangle(100000, 1, 5, 3) hist(tri, breaks=100, main=\"Triangle Distribution\", xlab=\"x\")  mean(tri) # 1/3*(1 + 5 + 3) = 3 #> [1] 3.002157 var(tri)  # 1/18*(1^2 + 3^2 + 5^2 - 1*5 - 1*3 - 5*3) = 0.666667 #> [1] 0.6680518 dtriangle(0.5, 0, 1, 0.5) # 2/(b-a) = 2 #> [1] 2 qtriangle(ptriangle(0.7)) # 0.7 #> [1] 0.7"},{"path":"/reference/triangle_cdfe.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangle parameter estimates using a non-linear fit of the empirical CDF — triangle_cdfe","title":"Triangle parameter estimates using a non-linear fit of the empirical CDF — triangle_cdfe","text":"Triangle parameter estimates using non-linear fit empirical CDF","code":""},{"path":"/reference/triangle_cdfe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangle parameter estimates using a non-linear fit of the empirical CDF — triangle_cdfe","text":"","code":"triangle_cdfe(x, control = stats::nls.control(maxiter = 100, warnOnly = TRUE))"},{"path":"/reference/triangle_cdfe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangle parameter estimates using a non-linear fit of the empirical CDF — triangle_cdfe","text":"x triangle distributed sample control object created stats::nls.control","code":""},{"path":"/reference/triangle_cdfe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangle parameter estimates using a non-linear fit of the empirical CDF — triangle_cdfe","text":"object class nls","code":""},{"path":"/reference/triangle_cdfe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangle parameter estimates using a non-linear fit of the empirical CDF — triangle_cdfe","text":"","code":"set.seed(10304) xtest <- rtriangle(100, 1, 5, 2) cdfe <- triangle_cdfe(xtest) print(cdfe) #> Nonlinear regression model #>   model: ecdf1 ~ ptriangle(x, a, b, c) #>    data: parent.frame() #>      a      b      c  #> 0.7848 5.3555 2.1059  #>  residual sum-of-squares: 0.03265 #>  #> Algorithm \"port\", convergence message: relative convergence (4) summary(cdfe) #>  #> Formula: ecdf1 ~ ptriangle(x, a, b, c) #>  #> Parameters: #>   Estimate Std. Error t value Pr(>|t|)     #> a  0.78482    0.04266   18.40   <2e-16 *** #> b  5.35551    0.03210  166.84   <2e-16 *** #> c  2.10587    0.04613   45.65   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.01835 on 97 degrees of freedom #>  #> Algorithm \"port\", convergence message: relative convergence (4) #>  coef(cdfe) #>         a         b         c  #> 0.7848163 5.3555055 2.1058729  if (FALSE) {   confint(cdfe) }"},{"path":"/reference/triangle_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood estimate of the triangle distribution parameters — triangle_mle","title":"Maximum likelihood estimate of the triangle distribution parameters — triangle_mle","text":"Maximum likelihood estimate triangle distribution parameters","code":""},{"path":"/reference/triangle_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood estimate of the triangle distribution parameters — triangle_mle","text":"","code":"triangle_mle(x, debug = FALSE, maxiter = 100)"},{"path":"/reference/triangle_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood estimate of the triangle distribution parameters — triangle_mle","text":"x sample triangle distribution debug TRUE function check input parameters maxiter maximum number cycles optimization maximizing b given c maximizing c given b","code":""},{"path":"/reference/triangle_mle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood estimate of the triangle distribution parameters — triangle_mle","text":"object S3 class triangle_mle containing list call, coefficients, variance co-variance matrix, minimum negative log likelihood, details optimization number observations, sample","code":""},{"path":"/reference/triangle_mle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum likelihood estimate of the triangle distribution parameters — triangle_mle","text":"Samuel Kotz Johan Rene van Dorp. Beyond Beta doi:10.1142/5720","code":""},{"path":"/reference/triangle_mle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likelihood estimate of the triangle distribution parameters — triangle_mle","text":"","code":"xtest <- c(0.1, 0.25, 0.3, 0.4, 0.45, 0.6, 0.75, 0.8) triangle_mle(xtest) #> Triangle Maximum Likelihood Estimates #>  #> Call:  triangle_mle(x = xtest)  #>  #> Estimates: #>    Estimate Std.Err #> a 0.0076277  0.0996 #> b 0.9939370  0.1649 #> c 0.3000000  0.0861 #>  #> Convergence Code:  0 #> \t CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH  xtest <- rtriangle(20, 1, 5, 3.5) triangle_mle(xtest) #> Triangle Maximum Likelihood Estimates #>  #> Call:  triangle_mle(x = xtest)  #>  #> Estimates: #>   Estimate Std.Err #> a   1.5521  0.2339 #> b   4.4910  0.1430 #> c   3.8333  0.1430 #>  #> Convergence Code:  0 #> \t CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"},{"path":"/reference/triangle_mom.html","id":null,"dir":"Reference","previous_headings":"","what":"Triangle distribution method of moments estimate — triangle_mom","title":"Triangle distribution method of moments estimate — triangle_mom","text":"Triangle distribution method moments estimate","code":""},{"path":"/reference/triangle_mom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Triangle distribution method of moments estimate — triangle_mom","text":"","code":"triangle_mom(x)"},{"path":"/reference/triangle_mom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Triangle distribution method of moments estimate — triangle_mom","text":"x triangle distribution sample","code":""},{"path":"/reference/triangle_mom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Triangle distribution method of moments estimate — triangle_mom","text":"named vector parameter estimates","code":""},{"path":"/reference/triangle_mom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Triangle distribution method of moments estimate — triangle_mom","text":"","code":"set.seed(1204) x <- rtriangle(20, 0, 2, 1.5) triangle_mom(x) #> [1] 0.6188926 1.9317298 1.2443817"},{"path":"/news/index.html","id":"version-01-2006-10-20","dir":"Changelog","previous_headings":"","what":"version 0.1 (2006-10-20)","title":"version 0.1 (2006-10-20)","text":"Changed rtraingle qtriangle functions response excellent bug report Dr Michael Scroggie (Michael.Scroggie@dse.vic.gov.au). bug involved conditional logic inverse CDF “” “c” parameters equal, rtriangle return vector “”.","code":""},{"path":"/news/index.html","id":"version-04","dir":"Changelog","previous_headings":"","what":"version 0.4","title":"version 0.4","text":"Changed license GPL >= 2 according Kurt Hornik email","code":""},{"path":"/news/index.html","id":"version-05","dir":"Changelog","previous_headings":"","what":"version 0.5","title":"version 0.5","text":"CRAN release: 2012-10-29 Changed filenames portable","code":""},{"path":"/news/index.html","id":"version-06-2009-03-25","dir":"Changelog","previous_headings":"","what":"version 0.6 (2009-03-25)","title":"version 0.6 (2009-03-25)","text":"added log scale triangle function","code":""},{"path":"/news/index.html","id":"version-07","dir":"Changelog","previous_headings":"","what":"version 0.7","title":"version 0.7","text":"Added manual entry logarithmic triangle","code":""},{"path":"/news/index.html","id":"version-08","dir":"Changelog","previous_headings":"","what":"version 0.8","title":"version 0.8","text":"CRAN release: 2013-02-22 Changed arguments dtriangle dltriangle “x” instead “q” based suggestion Randall Pruim. Also, changed default triangle mode 1/2 base instead 1/2 (10 log triangle) based Randall Pruim’s suggestion well.","code":""},{"path":"/news/index.html","id":"version-09","dir":"Changelog","previous_headings":"","what":"version 0.9","title":"version 0.9","text":"Updates fix errors CRAN build.","code":""},{"path":"/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"version 0.10","title":"version 0.10","text":"CRAN release: 2016-01-21 Update description file","code":""},{"path":"/news/index.html","id":"version-011","dir":"Changelog","previous_headings":"","what":"version 0.11","title":"version 0.11","text":"CRAN release: 2017-10-02 Update dtriangle fix bug == c x == c","code":""},{"path":"/news/index.html","id":"version-012","dir":"Changelog","previous_headings":"","what":"version 0.12","title":"version 0.12","text":"CRAN release: 2019-02-14 Update move R-forge github","code":""},{"path":"/news/index.html","id":"version-10","dir":"Changelog","previous_headings":"","what":"version 1.0","title":"version 1.0","text":"CRAN release: 2022-12-13 Included maximum likelihood methods moments estimates","code":""},{"path":"/news/index.html","id":"version-101","dir":"Changelog","previous_headings":"","what":"version 1.0.1","title":"version 1.0.1","text":"Documentation fixes website formatting","code":""}]
